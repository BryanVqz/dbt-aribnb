# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbtlearn'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'dbtlearn'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]
asset-paths: ["assets"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  # Config indicated by + and applies to all files under models/example/
  dbtlearn:
    +materialized: view
    
    +post-hook: 
      - "GRANT SELECT ON {{ this }} TO ROLE REPORTER"

    # ======
    # Run Hooks
    # ======
    #on-run-start:
       # - "{{ resume_warehouse(var('resume_warehouse', false), var('warehouse_name')) }}"
       # - "{{ create_udfs() }}"
       # - "create schema if not exists \"{{generate_database_name(env_var('SNOWFLAKE_PREP_DATABASE'))}}\".snowplow_{{ var('year', run_started_at.strftime('%Y')) }}_{{ var('month', run_started_at.strftime('%m')) }}"
    # on-run-end:
       # - "{{ grant_usage_to_schemas() }}"
       # - "{{ suspend_warehouse(var('suspend_warehouse', false), var('warehouse_name')) }}"
       # - "{% if target.name == 'prod' %}{{ dbt_artifacts.upload_results(results) }}{% endif %}"
    dim:
      +materialized: table
    src:
      +materialized: ephemeral

vars:
  name: default_user_name